@page "/read-text"
@inject NavigationManager Navigation
@inject ReadingTimeService ReadingTimeService 
@inject HttpClient HttpClient

<h3>Read text</h3>

<div>
@if (fileContent == null)
{
    <p>Loading...</p>
}
else
{
    <p>@fileContent</p>
}
</div>


<button class="btn btn-primary" @onclick="StopStopwatch">Finish reading</button>

@code {
    private int timeElapsed = 0;
    private System.Timers.Timer timer;
    private string fileContent = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Call the API to get the file content
            fileContent = await HttpClient.GetStringAsync("/api/files/read-text-file?fileName=1_text.txt");
        }
        catch (Exception ex)
        {
            fileContent = $"Error fetching file: {ex.Message}";
        }

        // Start the stopwatch on initialization
        await StartStopwatch();

        // Set up the timer for UI updates

    }

    private async Task StartStopwatch()
    {
        await HttpClient.GetAsync("api/timer/start");
    }

    private async Task StopStopwatch()
    {
        await HttpClient.GetAsync("api/timer/stop");
    
            // Navigate to the next page
            Navigation.NavigateTo("/quiz");
        
    }

}
