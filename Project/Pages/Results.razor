@page "/results"
@using System.Text.Json
@using Shared.Models
@using Project.Enums
@inject ReadingTimeService ReadingTimeService
@inject QuizScoreService QuizScoreService
@inject HttpClient HttpClient

<PageTitle>Results</PageTitle>
Print all users results from file and compare 

<h2>Previous Reading Times</h2>
<ul>
    @*@foreach (var time in ReadingTimeService.GetPastTimes()) // show past 3 reading times
    {
        <li>@time seconds</li>
    }
*@

        <li>@result seconds</li> @*graziau bus atvaizduota kai bus duomenu baze*@
</ul>

@if (userResult != null)
{
    <p><strong>Name:</strong> @userResult.Name</p>
    <p><strong>Score:</strong> @userResult.QuizScore</p>
    <p><strong>Level:</strong> @QuizScoreService.GetScoreLevel(userResult.QuizScore)</p>
}
else
{
    <p>No results available.</p>
}


@code {
    private UserRecord userResult;
    private string result;

    protected override async Task OnInitializedAsync()
    {
        var quizResult = await HttpClient.GetStringAsync("/api/files/read-text-file?filename=UserRecord.json");
        // userRecord from file
        if (quizResult != null)
        {
            userResult = JsonSerializer.Deserialize<UserRecord>(quizResult);
        }
        
        // reading time from file
        result = await HttpClient.GetStringAsync("/api/files/read-text-file?fileName=stopwatch.txt");
    }
}